spring.datasource.url=jdbc:mysql://localhost:3306/thedatabase
spring.datasource.username=root
spring.datasource.password=xd300%783
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
multipart.maxFileSize=10000KB
multipart.maxRequestSize=10000KB
directory.images.upload.path=${user.home}/upload/
server.port=8090
shell.auth.simple.user.name=admin
shell.auth.simple.user.password=admin

# 81.2 Initialize a Database Using Hibernate

# You can set spring.jpa.hibernate.ddl-auto explicitly and the standard Hibernate property values are
# none, validate, update, create, and create-drop. Spring Boot chooses a default value for you based
# on whether it thinks your database is embedded. It defaults to create-drop if no schema manager has
# been detected or none in all other cases. An embedded database is detected by looking at the Connection
# type. hsqldb, h2, and derby are embedded, and others are not. Be careful when switching from in-memory
# to a ‘real’ database that you do not make assumptions about the existence of the tables and data in the
# new platform. You either have to set ddl-auto explicitly or use one of the other mechanisms to initialize
# the database.

# https://docs.spring.io/spring-boot/docs/current/reference/html/howto-database-initialization.html